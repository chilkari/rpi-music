#!/bin/sh

# If you're using a first generation RPI (A/B/B+), uncomment the following:
# RPI1=1


prep_system() {
    # Shutdown unneeded things.
    echo "rpi-audio: Stopping unnecessary services..."
    RUNNING=`pgrep ntp`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "NTP running. Stopping..."
        sudo service ntp stop 2>&1 &
    fi
	
    export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/dbus/system_bus_socket

    RUNNING=`pgrep triggerhappy`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "TriggerHappy running. Stopping..."
        sudo service triggerhappy stop 2>&1 &
    fi
    RUNNING=`pgrep console-kit-daemon`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "console-kit-daemon running. Stopping..."
        sudo killall console-kit-daemon 2>&1 &
    fi
    RUNNING=`pgrep dbus`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "dbus running. Stopping..."
        sudo service dbus stop 2>&1 &
    fi
    RUNNING=`pgrep dbus-daemon`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "dbus-daemon running. Stopping..."
        sudo killall dbus-daemon 2>&1 &
    fi
    RUNNING=`pgrep dbus-launch`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "dbus-launch running. Stopping..."
        sudo killall dbus-launch 2>&1 &
    fi
    RUNNING=`pgrep polkitd`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "polkitd running. Stopping..."
        sudo killall polkitd 2>&1 &
    fi
    RUNNING=`pgrep gvfsd`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "gvfsd running. Stopping..."
        sudo killall gvfsd  2>&1 &
    fi
    
    sudo mount -o remount,size=128M /dev/shm

    echo "rpi-audio: Setting CPU governor to performance..."
    if [ "${RPI1:-null}" != null ]; then
        # RPI1 env is set - trigger that way
        echo "... RPI 1 mode"
        echo -n performance | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    else
        # No RPI1 - assume RPI2
        for cpu in /sys/devices/system/cpu/cpu[0-9]*; 
        do echo -n performance | sudo tee $cpu/cpufreq/scaling_governor; 
        done
    fi

    # Ensure that we force USB mode and disable turbo on the ethernet controller
    if grep -q "dwc_otg.speed=1 smsc95xx.turbo_mode=N" /boot/cmdline.txt; then
        echo "/boot/cmdline.txt already modified for USB1.1+noEthernetTurbo"
    else
        sudo cp /boot/cmdline.txt /boot/cmdline.bak
        sudo sed -i '1s/^/dwc_otg.speed=1 smsc95xx.turbo_mode=N /' /boot/cmdline.txt
    fi

    local SHUTDOWN_FILE="/home/pi/rpi-music/shutdown_request"
    if [ -f $SHUTDOWN_FILE ];
    then
        echo "File $SHUTDOWN_FILE exists. Removing..."
        rm $SHUTDOWN_FILE
    else
        echo "File $SHUTDOWN_FILE does not exist."
    fi

}


# Looper Functions

start_jack_looper() {
    echo "rpi-audio: starting JackD..."
    RUNNING=`pgrep jackd`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "JackD already running."
    else
        export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/dbus/system_bus_socket
        # See available devices with "cat /proc/asound/cards"
        # Can use name or number at far left after the -dhw:
        # sudo -u pi jackd -P84 -p32 -t2000 -d alsa -dhw:Device -p 4096 -r 44100 -s -D -znone >> /home/pi/jack.log 2>&1 &
        sudo -u pi jackd -P84 -p16 -t2000 -d alsa -dhw:Device -n 4 -p 256 -r 44100 -s -D -znone -X raw >> /home/pi/jack.log 2>&1 &
    fi
}

start_sooperlooper() {
    # Start SooperLooper
    echo "rpi-audio: starting SooperLooper..."
    RUNNING=`pgrep sooperlooper`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "sooperlooper already running."
    else
        sudo -u pi sooperlooper -L /home/pi/rpi-music/looper/session.slsess -m /home/pi/rpi-music/looper/nk2.slb >> /home/pi/sooperlooper.log 2>&1 &
    fi
}

start_mididings_looper() {
    RUNNING=`pgrep looper-mididing`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "mididings already running."
    else
        /home/pi/rpi-music/looper/looper-mididings.py &
    fi
}

connect_jack_looper() {
    echo "Connecting sooper loop to jack..."
    jack_connect sooperlooper:common_out_1 system:playback_1
    jack_connect sooperlooper:common_out_2 system:playback_2
    jack_connect system:capture_1 sooperlooper:common_in_1
    jack_connect system:capture_1 sooperlooper:common_in_2
}

connect_midi_looper() {
    # Connect SooperLooper to NanoKontrol2 interface:
    echo "rpi-audio: Connecting NanoKontrol2 interface to SooperLooper..."
    nk=$(aconnect -i | grep client | grep -i "nanoKONTROL2" | cut -d " " -f2 | tr -d ":")
    echo "rpi-audio: NanoKontrol2: $nk"
    sooperlooper=$(aconnect -o | grep client | grep -i "sooperlooper" | cut -d " " -f2 | tr -d ":")
    echo "rpi-audio: sooperlooper: $sooperlooper"
    mididings=$(aconnect -o | grep client | grep -i "mididings" | cut -d " " -f2 | tr -d ":")
    echo "rpi-audio: mididings: $mididings"

    # mididings are always: 0: NK_IN, 1: SL, 2: NK_OUT
    echo "rpi-audio: connecting NanoKontrol2, $nk to mididings: $mididings"
    aconnect $nk:0 $mididings:0
    echo "rpi-audio: connecting mididings:1, $mididings to sooperlooper: $sooperlooper"
    aconnect $mididings:1 $sooperlooper:0
    echo "rpi-audio: connecting mididings:2, $mididings to nanokontrol: $nk"
    aconnect $mididings:2 $nk:0
}

start_looper() {
    echo "rpi-audio: starting..." 
    /home/pi/rpi-music/looper/announce.py rew_on
    prep_system

    /home/pi/rpi-music/looper/announce.py fwd_on
    start_jack_looper
    sleep 3

    /home/pi/rpi-music/looper/announce.py stop_on
    start_sooperlooper
    sleep 3

    /home/pi/rpi-music/looper/announce.py play_on
    start_mididings_looper
    sleep 7

    /home/pi/rpi-music/looper/announce.py rec_on
    connect_jack_looper
    sleep 2

    /home/pi/rpi-music/looper/announce.py clear
    connect_midi_looper

    /home/pi/rpi-music/looper/announce.py spiral
    /home/pi/rpi-music/looper/announce.py cycle_on
}

stop_looper() {
    echo "rpi-audio: stopping..."
    RUNNING=`pgrep sooperlooper`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "Stopping sooperlooper..."
        sudo killall sooperlooper 2>&1
    else
        echo "sooperlooper not running."
    fi
    RUNNING=`pgrep looper-mididing`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "Stopping mididings..."
        sudo kill $RUNNING 2>&1
    else
        echo "mididings not running."
    fi
    RUNNING=`pgrep jackd`
    if [ "${#RUNNING}" -gt 0 ] ; then
        echo "Stopping jackd..."
        sudo killall jackd 2>&1
    else
        echo "jackd not running."
    fi
    /home/pi/rpi-music/looper/announce.py shutdown
    /home/pi/rpi-music/looper/announce.py clear
}

# Handling for start/stop args
case "$1" in
    start)

        case "$2" in

            looper)
                 start_looper
                 ;;
            *)
                 echo "Unrecognized machine type. {looper|sampler|organ}"
                 ;;

         esac
         ;;

     stop)

         case "$2" in

             looper)
                 stop_looper
                 ;;
             *)
                 echo "Unrecognized machine type. {looper|sampler|organ}"
                 ;;
         esac
         ;;

     clear)

         if [ -f /home/pi/sooperlooper.log ]; then
             sudo rm /home/pi/sooperlooper.log
         fi
         if [ -f /home/pi/jack.log ]; then
             sudo rm /home/pi/jack.log
         fi
         ;;

    *)
        echo "Usage: /etc/init.d/rpi-audio {start|stop|clear} {looper|sampler|organ}"
        exit 1
    ;;
esac

exit 0
